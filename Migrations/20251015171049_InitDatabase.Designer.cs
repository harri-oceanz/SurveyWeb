// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurveyWeb.Models.EF;

#nullable disable

namespace SurveyWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251015171049_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SurveyWeb.Models.Entity.BaoCao", b =>
                {
                    b.Property<string>("MaBC")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MaKS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("TongSoPhanHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("MaBC");

                    b.HasIndex("MaKS");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.CauHoi", b =>
                {
                    b.Property<string>("MaCH")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("BatBuoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("GiaTriToiDa")
                        .HasColumnType("int");

                    b.Property<int?>("GiaTriToiThieu")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnhMinhHoa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoaiCauHoi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaKS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SoLuongChonToiDa")
                        .HasColumnType("int");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("VideoMinhHoa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaCH");

                    b.HasIndex("MaKS", "ThuTu")
                        .IsUnique();

                    b.ToTable("CauHoi");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.ColMatrix", b =>
                {
                    b.Property<string>("MaCol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaCH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("MaCol");

                    b.HasIndex("MaCH");

                    b.ToTable("ColMatrix");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.DanhMuc", b =>
                {
                    b.Property<string>("MaDM")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaNguoiTao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TenDM")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaDM");

                    b.HasIndex("MaNguoiTao");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.FileUpload", b =>
                {
                    b.Property<string>("MaFile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("KichThuoc")
                        .HasColumnType("bigint");

                    b.Property<string>("LoaiFile")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("NgayUpload")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("TenFile")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("MaFile");

                    b.HasIndex("MaND");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.KhaoSat", b =>
                {
                    b.Property<string>("MaKS")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("ApDungToanTruong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("DanhSachKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanhSachLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanhSachNguoiChinhSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDM")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaNguoiTao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaTemplate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<string>("TenKS")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Đang hoạt động");

                    b.HasKey("MaKS");

                    b.HasIndex("MaDM");

                    b.HasIndex("MaNguoiTao");

                    b.HasIndex("MaTemplate");

                    b.ToTable("KhaoSat");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaTruong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaKhoa");

                    b.HasIndex("MaTruong");

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.LopHoc", b =>
                {
                    b.Property<string>("MaLH")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenLH")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLH");

                    b.HasIndex("MaKhoa");

                    b.ToTable("LopHoc");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.LuaChon", b =>
                {
                    b.Property<string>("MaLC")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("GiaTri")
                        .HasColumnType("int");

                    b.Property<string>("MaCH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("MaLC");

                    b.HasIndex("MaCH", "ThuTu")
                        .IsUnique();

                    b.ToTable("LuaChon");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.NguoiDung", b =>
                {
                    b.Property<string>("MaND")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaKhoa")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaLH")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Hoạt động");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaND");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MaKhoa");

                    b.HasIndex("MaLH");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.NhatKy", b =>
                {
                    b.Property<int>("MaNK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNK"));

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoaiHanhDong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ThoiGian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("MaNK");

                    b.HasIndex("MaND");

                    b.ToTable("NhatKy");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.PhanHoi", b =>
                {
                    b.Property<string>("MaPH")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaKS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaND")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("NgayPhanHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Hoàn thành");

                    b.HasKey("MaPH");

                    b.HasIndex("MaND");

                    b.HasIndex("MaKS", "MaND")
                        .IsUnique();

                    b.ToTable("PhanHoi");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.PhanHoiChiTiet", b =>
                {
                    b.Property<string>("MaPHCT")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DanhSachMaLC")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DanhSachMaTrich")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("GiaTriDateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("GiaTriGio")
                        .HasColumnType("time");

                    b.Property<DateTime?>("GiaTriNgay")
                        .HasColumnType("date");

                    b.Property<int?>("GiaTriSo")
                        .HasColumnType("int");

                    b.Property<string>("MaCH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaCol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaFile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaLC")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaPH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaRow")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDungText")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("MaPHCT");

                    b.HasIndex("MaCH");

                    b.HasIndex("MaCol");

                    b.HasIndex("MaFile");

                    b.HasIndex("MaLC");

                    b.HasIndex("MaPH");

                    b.HasIndex("MaRow");

                    b.ToTable("PhanHoiChiTiet");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.RowMatrix", b =>
                {
                    b.Property<string>("MaRow")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MaCH")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("MaRow");

                    b.HasIndex("MaCH");

                    b.ToTable("RowMatrix");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.Template", b =>
                {
                    b.Property<string>("MaTemplate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AnswerBackgroundColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#FFFFFF");

                    b.Property<int>("AnswerBorderRadius")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(8);

                    b.Property<string>("AnswerColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#333333");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#FFFFFF");

                    b.Property<string>("BackgroundImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ButtonBorderRadius")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(25);

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#4A90E2");

                    b.Property<string>("ButtonTextColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#FFFFFF");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Arial, sans-serif");

                    b.Property<string>("MaNguoiTao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("QuestionColor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("#000000");

                    b.Property<int>("QuestionFontSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18);

                    b.Property<string>("TenTemplate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTemplate");

                    b.HasIndex("MaNguoiTao");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.Truong", b =>
                {
                    b.Property<string>("MaTruong")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTruong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaTruong");

                    b.ToTable("Truong");
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.BaoCao", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.KhaoSat", null)
                        .WithMany()
                        .HasForeignKey("MaKS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.CauHoi", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.KhaoSat", null)
                        .WithMany()
                        .HasForeignKey("MaKS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.ColMatrix", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.CauHoi", null)
                        .WithMany()
                        .HasForeignKey("MaCH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.DanhMuc", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiTao")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.FileUpload", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.KhaoSat", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.DanhMuc", null)
                        .WithMany()
                        .HasForeignKey("MaDM")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiTao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SurveyWeb.Models.Entity.Template", null)
                        .WithMany()
                        .HasForeignKey("MaTemplate")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.Khoa", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.Truong", null)
                        .WithMany()
                        .HasForeignKey("MaTruong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.LopHoc", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.Khoa", null)
                        .WithMany()
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.LuaChon", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.CauHoi", null)
                        .WithMany()
                        .HasForeignKey("MaCH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.NguoiDung", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.Khoa", null)
                        .WithMany()
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SurveyWeb.Models.Entity.LopHoc", null)
                        .WithMany()
                        .HasForeignKey("MaLH")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.NhatKy", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.PhanHoi", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.KhaoSat", null)
                        .WithMany()
                        .HasForeignKey("MaKS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaND")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.PhanHoiChiTiet", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.CauHoi", null)
                        .WithMany()
                        .HasForeignKey("MaCH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SurveyWeb.Models.Entity.ColMatrix", null)
                        .WithMany()
                        .HasForeignKey("MaCol")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SurveyWeb.Models.Entity.FileUpload", null)
                        .WithMany()
                        .HasForeignKey("MaFile")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SurveyWeb.Models.Entity.LuaChon", null)
                        .WithMany()
                        .HasForeignKey("MaLC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SurveyWeb.Models.Entity.PhanHoi", null)
                        .WithMany()
                        .HasForeignKey("MaPH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SurveyWeb.Models.Entity.RowMatrix", null)
                        .WithMany()
                        .HasForeignKey("MaRow")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.RowMatrix", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.CauHoi", null)
                        .WithMany()
                        .HasForeignKey("MaCH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SurveyWeb.Models.Entity.Template", b =>
                {
                    b.HasOne("SurveyWeb.Models.Entity.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("MaNguoiTao")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
